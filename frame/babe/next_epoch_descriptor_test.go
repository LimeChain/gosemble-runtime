package babe

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
)

var (
	nextEpochDescriptor = NextEpochDescriptor{
		Authorities: authorities,
		Randomness:  randomness,
	}
)

var (
	nextEpochDescriptorBytes = append(append([]byte{}, authoritiesBytes...), randomnessBytes...)
)

var (
	authoritiesBytes = []byte{
		0x4, 0xd4, 0x35, 0x93, 0xc7, 0x15, 0xfd, 0xd3, 0x1c, 0x61, 0x14, 0x1a, 0xbd, 0x4, 0xa9, 0x9f, 0xd6, 0x82, 0x2c, 0x85, 0x58, 0x85, 0x4c, 0xcd, 0xe3, 0x9a, 0x56, 0x84, 0xe7, 0xa5, 0x6d, 0xa2, 0x7d, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	}

	randomnessBytes = []byte{
		0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
	}
)

func Test_NextEpochDescriptor_Encode(t *testing.T) {
	buffer := &bytes.Buffer{}

	err := nextEpochDescriptor.Encode(buffer)
	assert.NoError(t, err)

	assert.Equal(t, nextEpochDescriptorBytes, buffer.Bytes())
}

func Test_NextEpochDescriptor_Bytes(t *testing.T) {
	assert.Equal(t, nextEpochDescriptorBytes, nextEpochDescriptor.Bytes())
}
